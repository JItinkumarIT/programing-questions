To automate the creation of Azure Active Directory (AAD) groups based on your Azure DevOps (ADO) projects, you can use PowerShell scripts. Below are two scripts as requested:

1. **Main Script**: This script will create the required AAD groups for a single project if they do not already exist.
2. **Batch Script**: This script will loop through a list of project names and call the main script for each project.

### Main Script (CreateAADGroups.ps1)

```powershell
# Function to check if a group exists in AAD
function Get-AADGroup {
    param (
        [string]$GroupName
    )

    $group = Get-AzureADGroup -Filter "DisplayName eq '$GroupName'"
    return $group
}

# Function to create a group in AAD
function Create-AADGroup {
    param (
        [string]$GroupName,
        [string]$Description
    )

    $group = New-AzureADGroup -DisplayName $GroupName -MailEnabled $false -SecurityEnabled $true -MailNickname $GroupName -Description $Description
    return $group
}

# Function to ensure a group exists
function Ensure-AADGroup {
    param (
        [string]$GroupName,
        [string]$Description
    )

    $group = Get-AADGroup -GroupName $GroupName
    if (-not $group) {
        Write-Output "Creating group: $GroupName"
        Create-AADGroup -GroupName $GroupName -Description $Description
    } else {
        Write-Output "Group already exists: $GroupName"
    }
}

# Main function to create groups for a project
function Create-ProjectGroups {
    param (
        [string]$ProjectName
    )

    $baseGroupName = "ADO-Project-$ProjectName"

    $roles = @(
        "Build Administrators",
        "Contributors",
        "Endpoint Administrators",
        "Endpoint Creators",
        "Project Administrators",
        "Project Valid Users",
        "Readers",
        "Release Administrators"
    )

    foreach ($role in $roles) {
        $groupName = "$baseGroupName-$role"
        Ensure-AADGroup -GroupName $groupName -Description "$role group for $ProjectName project"
    }
}

# Connect to Azure AD
Connect-AzureAD

# Example usage
param (
    [string]$ProjectName
)

if (-not $ProjectName) {
    Write-Error "Please provide a project name."
    exit 1
}

Create-ProjectGroups -ProjectName $ProjectName
```

### Batch Script (BatchCreateAADGroups.ps1)

```powershell
# Connect to Azure AD
Connect-AzureAD

# Import the function script
. .\CreateAADGroups.ps1

# List of project names
$projectNames = @(
    "TSC Finance Calculation Engine",
    # Add more project names here
    "Another Project",
    "Yet Another Project"
)

# Loop through the project names and create groups
foreach ($projectName in $projectNames) {
    Write-Output "Processing project: $projectName"
    Create-ProjectGroups -ProjectName $projectName
}
```

### Instructions

1. **Ensure you have the AzureAD module installed**:
   ```powershell
   Install-Module -Name AzureAD
   ```

2. **Run the Main Script**:
   - Save the `CreateAADGroups.ps1` script to a file.
   - Execute the script in PowerShell, providing a project name as a parameter:
     ```powershell
     .\CreateAADGroups.ps1 -ProjectName "TSC Finance Calculation Engine"
     ```

3. **Run the Batch Script**:
   - Save the `BatchCreateAADGroups.ps1` script to a file.
   - Ensure the `CreateAADGroups.ps1` script is in the same directory or adjust the import path accordingly.
   - Execute the batch script:
     ```powershell
     .\BatchCreateAADGroups.ps1
     ```

These scripts will check if the specified AAD groups exist and create them if they do not, standardizing the group names across your projects. Ensure you have the necessary permissions to create groups in AAD before running these scripts.
